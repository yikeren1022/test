{
	"name": "dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'singleDocument') ~> source1",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source2",
				"source1 foldDown(unroll(),",
				"     mapColumn(",
				"          time,",
				"          resourceId,",
				"          category,",
				"          operationName,",
				"          operationVersion,",
				"          schemaVersion,",
				"          statusCode,",
				"          statusText,",
				"          durationMs,",
				"          callerIpAddress,",
				"          correlationId,",
				"          identity,",
				"          location,",
				"          properties,",
				"          uri,",
				"          protocol,",
				"          resourceType",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"source2 select(mapColumn(",
				"          time,",
				"          resourceId,",
				"          category,",
				"          operationName,",
				"          operationVersion,",
				"          schemaVersion,",
				"          statusCode,",
				"          statusText,",
				"          durationMs,",
				"          callerIpAddress,",
				"          correlationId,",
				"          identity,",
				"          location,",
				"          properties,",
				"          uri,",
				"          protocol,",
				"          resourceType",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CardID as string,",
				"          CustomerID as string,",
				"          EmployeeID as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
			]
		}
	}
}