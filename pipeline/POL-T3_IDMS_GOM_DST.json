{
	"name": "POL-T3_IDMS_GOM_DST",
	"properties": {
		"description": "################################################################################\n### Project             : GSC Lot1\n### Category          : GSC\n### Function name : POL-T3_IDMS_GOM\n### Pipeline name  : POL-T3_IDMS_GOM_DST\n### Version             : 1.0\n### Description       :  Insert PO Line information into the Worktable\n################################################################################\n### Change history\n################################################################################\n### Version             : 1.0\n### Date                 : 2019/09/26\n### Modified by     : HCM Sato\n### Description      : Create New\n################################################################################",
		"activities": [
			{
				"name": "Get_outPutFile_Size",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Select_V_PO_LINE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"fieldList": []
				}
			},
			{
				"name": "Check_File_Size",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get_outPutFile_Size",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(activity('Get_outPutFile_Size').output.columnCount, 0))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Exe_Status",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Exe_Status",
								"value": {
									"value": "1",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Convert_PO_Line",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/GSC/src/IDMS_GOM/POL-T3_IDMS_GOM",
								"baseParameters": {
									"DATAAREAID": {
										"value": "@variables('DATAAREAID')",
										"type": "Expression"
									},
									"programId": {
										"value": "@variables('programId')",
										"type": "Expression"
									},
									"sysFromTo": {
										"value": "@variables('sysFromTo')",
										"type": "Expression"
									},
									"targetDir": {
										"value": "@variables('targetDir')",
										"type": "Expression"
									},
									"sysDate": {
										"value": "@formatDateTime(pipeline().TriggerTime, 'yyyyMMddHHmmss')",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Get_Exe_Status",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Convert_PO_Line",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": true
								}
							}
						},
						{
							"name": "Set_Exe_Status",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get_Exe_Status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Exe_Status",
								"value": {
									"value": "@string(activity('Get_Exe_Status').output.firstRow.statusCd)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Delete_Status_File",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Set_Exe_Status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"enableLogging": false
							}
						}
					]
				}
			},
			{
				"name": "Execute_TEMPFILE_COPY_TO_GATEWAYSERVER1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Select_V_PO_LINE",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitOnCompletion": true,
					"parameters": {
						"programId": {
							"value": "@variables('programId')",
							"type": "Expression"
						},
						"DATAAREAID": {
							"value": "@variables('DATAAREAID')",
							"type": "Expression"
						},
						"Exe_Status": {
							"value": "@variables('Error_Code')",
							"type": "Expression"
						},
						"sysFromTo": {
							"value": "@variables('sysFromTo')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Set_DATAAREAID",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "DATAAREAID",
					"value": {
						"value": "@replace(pipeline().parameters.DATAAREAID, '''', '')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set_programId",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "programId",
					"value": {
						"value": "@replace('POL-T3_IDMS_GOM', '''', '')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set_sysFromTo",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "sysFromTo",
					"value": {
						"value": "@replace('IDMS_GOM', '''', '')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set_targetDir",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "targetDir",
					"value": {
						"value": "@replace('files', '''', '')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "CASE_NORMAL",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check_File_Size",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('Exe_Status'), '0')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Create_GOM_PO_LINE_STK1",
							"description": "",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Get_TP_CD1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": true
								},
								"sink": {
									"type": "OracleSink",
									"writeBatchSize": 100000,
									"preCopyScript": {
										"value": "delete from GOM_PO_LINE_STK where TP_CD = '@{activity('GET_TP_CD1').output.firstRow.TP_CD}'",
										"type": "Expression"
									}
								},
								"enableStaging": false
							}
						},
						{
							"name": "Get_TP_CD1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": true
								}
							}
						},
						{
							"name": "Update_GSC_IF_MNG1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Create_GOM_PO_LINE_STK1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": true
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBatchSize": 100000,
									"preCopyScript": {
										"value": "-- 変数宣言\nDECLARE @SYSDATE DATETIME;\nDECLARE @DATAAREAID VARCHAR(4);\nDECLARE @PROGRAMID VARCHAR(30);\nSET @SYSDATE = '@{variables('sysDate')}';\nSET @DATAAREAID = '@{variables('DATAAREAID')}';\nSET @PROGRAMID = '@{variables('programId')}';\n\nupdate GSC_IF_MNG set\n    GSC_IF_MNG.CPRT_DTTM = CONVERT(DateTime, @SYSDATE)\nwhere\n    GSC_IF_MNG.DATAAREAID = @DATAAREAID\nand\n    GSC_IF_MNG.FUNCTION_NAME = @PROGRAMID\n;",
										"type": "Expression"
									},
									"disableMetricsCollection": false
								},
								"enableStaging": false
							}
						},
						{
							"name": "Execute_CMN_FILE_BACKUP1",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Update_GSC_IF_MNG1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "CMN_FILE_BACKUP",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"programId": {
										"value": "@variables('programId')",
										"type": "Expression"
									},
									"DATAAREAID": {
										"value": "@variables('DATAAREAID')",
										"type": "Expression"
									},
									"sysFromTo": {
										"value": "@variables('sysFromTo')",
										"type": "Expression"
									},
									"targetDir": {
										"value": "@variables('targetDir')",
										"type": "Expression"
									},
									"backupDate": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"Exe_Status": {
										"value": "@variables('Exe_Status')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Set_sysDate",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "sysDate",
					"value": {
						"value": "@formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd HH:mm:ss')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set_Error_Code",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Error_Code",
					"value": {
						"value": "8",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Select_V_PO_LINE",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set_Error_Code",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set_sysDate",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set_targetDir",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set_sysFromTo",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set_programId",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set_DATAAREAID",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set_Normal_Code",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "--変数宣言\nDECLARE @CPRT_DTTM DATETIME;\nDECLARE @OVERLAP_TIME INT;\nDECLARE @SYSDATE DATETIME;\nDECLARE @DATAAREAID VARCHAR(4);\nDECLARE @PROGRAMID VARCHAR(30);\nSET @SYSDATE = '@{variables('sysDate')}';\nSET @DATAAREAID = '@{variables('DATAAREAID')}';\nSET @PROGRAMID = '@{variables('programId')}';\n\nSELECT\n    @CPRT_DTTM = GSC_IF_MNG.CPRT_DTTM\n   ,@OVERLAP_TIME = GSC_IF_MNG.OVERLAP_TIME\nFROM\n    GSC_IF_MNG\nWHERE\n    GSC_IF_MNG.DATAAREAID = @DATAAREAID\nAND GSC_IF_MNG.FUNCTION_NAME = @PROGRAMID\n;\n\nSELECT\n    V_PO_LINE.DATAAREAID                             AS TP_CD\n   ,V_PO_LINE.ORDERVENDORACCOUNTNUMBER               AS VNDR_CD\n   ,V_PO_LINE.PURCHASEORDERNUMBER                    AS ORDER_NO\n   ,CONVERT(nvarchar, V_PO_LINE.LINENUMBER )         AS ITM_NO\n   ,V_PO_LINE.CONV_ITR_RECID                         AS PO_LINE_NO\n   ,SYSUTCDATETIME()                                 AS CREATED_DATE\n   ,'GSC'                                            AS CREATED_USER\n   ,'POL-T3_IDMS_GOM'                                AS CREATED_PROGRAM\n   ,SYSUTCDATETIME()                                 AS LAST_EDITED\n   ,'GSC'                                            AS LAST_USER\n   ,'POL-T3_IDMS_GOM'                                AS LAST_PROGRAM\n   ,0                                                AS VERSION_EX_KEY\n   ,V_PO_LINE.PURCHASEORDERPOOLID                    AS PO_ORDER_TP\n   ,V_PO_LINE.INVENTLOCATIONID                       AS PO_PRTS_WH_CD\n   ,V_PO_LINE.ITEMNUMBER_ORIGINAL                    AS PO_PRTS_NO\n   ,V_PO_LINE.PO_PRTS_JV_CODE                        AS PO_PRTS_JV_CD\n   ,'1'                                              AS PO_PRTS_INV_CLS\n   ,ISNULL( V_PO_LINE.QTY, 0 )                       AS PO_QTY\n   ,V_PO_LINE.PURCHUNIT                              AS PO_UP_AMT\n   ,V_PO_LINE.PURCHPRICE                             AS PO_AMT\n   ,V_PO_LINE.LINEDESCRIPTION                        AS PO_PRTS_NM\n   ,V_PO_LINE.SUPPLIERITEMID                         AS VNDR_PRTS_NO\n   ,SUBSTRING( V_PO_LINE.SUPPLIERITEMNAME, 1, 30)    AS VNDR_PRTS_NM_1\n   ,SUBSTRING( V_PO_LINE.SUPPLIERITEMNAME, 31, 30)   AS VNDR_PRTS_NM_2\n   ,V_PO_LINE.LINEDISCOUNTPERCENTAGE                 AS DSCNT_RT_1\n   ,V_PO_LINE.INVENTLOCATIONID                       AS ARVL_GOODS_PRTS_SITE_CD\n   ,V_PO_LINE.ARVL_GOODS_PRTS_ITEMNUMBER_ORIGINAL    AS ARVL_GOODS_PRTS_NO\n   ,V_PO_LINE.ARVL_GOODS_PRTS_JV_CODE                AS ARVL_GOODS_PRTS_JV_CD\n   ,'1'                                              AS ARVL_GOODS_PRTS_INV_CLS\n   ,ISNULL( V_PO_LINE.QTY, 0 )                       AS ARVL_GOODS_QTY\n   ,V_PO_LINE.PURCHUNIT                              AS ARVL_GOODS_UP_AMT\n   ,V_PO_LINE.PURCHPRICE                             AS ARVL_GOODS_AMT\n   ,V_PO_LINE.ACCOUNTINGDATE                         AS PO_DT\n   ,V_PO_LINE.REQUESTEDDELIVERYDATE                  AS DSGN_DUE_DT\n   ,V_PO_LINE.CONFIRMEDDELIVERYDATE                  AS VNDR_SHIP_PLN_DT\n   ,V_PO_LINE.DATEPHYSICAL                           AS ARVL_GOODS_DT\n   ,V_PO_LINE.DATEFINANCIAL                          AS SHIP_DT\n   ,V_PO_LINE.INVOICEID                              AS VNDR_INVC_NO\n   ,V_PO_LINE.INVENTDIMENSION2                       AS CASE_BANGO\n   ,V_PO_LINE.PO_Status                              AS PO_MV_CD\n   ,V_PO_LINE.MODIFIEDDATETIME                       AS PO_MV_DT\n   ,V_PO_LINE.BACK_ORDER_CD                          AS BACK_ORDER_CD\nFROM\n    V_PO_LINE\nWHERE\n    V_PO_LINE.DATAAREAID = @DATAAREAID\nAND\n    ( @CPRT_DTTM IS NULL OR @CPRT_DTTM IS NOT NULL\n        AND (     V_PO_LINE.POH_SYNCSTARTDATETIME     BETWEEN DATEADD(second, -(@OVERLAP_TIME), @CPRT_DTTM ) AND CONVERT(DateTime, @SYSDATE )\n               OR V_PO_LINE.POL_SYNCSTARTDATETIME     BETWEEN DATEADD(second, -(@OVERLAP_TIME), @CPRT_DTTM ) AND CONVERT(DateTime, @SYSDATE )\n               OR V_PO_LINE.ITO_SYNCSTARTDATETIME     BETWEEN DATEADD(second, -(@OVERLAP_TIME), @CPRT_DTTM ) AND CONVERT(DateTime, @SYSDATE )\n               OR V_PO_LINE.ITR_SYNCSTARTDATETIME     BETWEEN DATEADD(second, -(@OVERLAP_TIME), @CPRT_DTTM ) AND CONVERT(DateTime, @SYSDATE )\n               OR V_PO_LINE.IID_SYNCSTARTDATETIME     BETWEEN DATEADD(second, -(@OVERLAP_TIME), @CPRT_DTTM ) AND CONVERT(DateTime, @SYSDATE )\n               OR V_PO_LINE.ISI_SYNCSTARTDATETIME     BETWEEN DATEADD(second, -(@OVERLAP_TIME), @CPRT_DTTM ) AND CONVERT(DateTime, @SYSDATE )\n               OR V_PO_LINE.IAL_SYNCSTARTDATETIME     BETWEEN DATEADD(second, -(@OVERLAP_TIME), @CPRT_DTTM ) AND CONVERT(DateTime, @SYSDATE )\n               OR V_PO_LINE.IAT_SYNCSTARTDATETIME     BETWEEN DATEADD(second, -(@OVERLAP_TIME), @CPRT_DTTM ) AND CONVERT(DateTime, @SYSDATE )\n            )\n    );",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"enableStaging": false
				}
			},
			{
				"name": "Set_Normal_Code",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Normal_Code",
					"value": {
						"value": "0",
						"type": "Expression"
					}
				}
			},
			{
				"name": "CASE_NO_RECORD_FOUND",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "CASE_NORMAL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('Exe_Status'), '1')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Execute_CMN_FILE_BACKUP2",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Update_GSC_IF_MNG2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "CMN_FILE_BACKUP",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"programId": {
										"value": "@variables('programId')",
										"type": "Expression"
									},
									"DATAAREAID": {
										"value": "@variables('DATAAREAID')",
										"type": "Expression"
									},
									"sysFromTo": {
										"value": "@variables('sysFromTo')",
										"type": "Expression"
									},
									"targetDir": {
										"value": "@variables('targetDir')",
										"type": "Expression"
									},
									"backupDate": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"Exe_Status": {
										"value": "@variables('Normal_Code')",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Delete_GOM_PO_LINE_STK1",
							"description": "",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Get_TP_CD2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": true
								},
								"sink": {
									"type": "OracleSink",
									"writeBatchSize": 100000,
									"preCopyScript": {
										"value": "delete from GOM_PO_LINE_STK where TP_CD = '@{activity('GET_TP_CD2').output.firstRow.SYSTEM2_CD_VAL}'",
										"type": "Expression"
									}
								},
								"enableStaging": false
							}
						},
						{
							"name": "Get_TP_CD2",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "-- 変数宣言\nDECLARE @CD_TP NVARCHAR(50);\nDECLARE @TP_CD NVARCHAR(20);\nDECLARE @DATAAREAID VARCHAR(4);\nDECLARE @SYSTEM1 NVARCHAR(20);\nDECLARE @SYSTEM2 NVARCHAR(20);\nSET @CD_TP = 'TP_CD';\nSET @TP_CD = 'GSC';\nSET @DATAAREAID = '@{variables('DATAAREAID')}';\nSET @SYSTEM1 = '@{split(variables('sysFromTo'), '_' )[0]}';\nSET @SYSTEM2 = '@{split(variables('sysFromTo'), '_' )[1]}';\n\nselect SYSTEM2_CD_VAL\nfrom GSC_CODE_CONVERSION_TBL\nwhere CD_TP = @CD_TP\n  and TP_CD = @TP_CD\n  and SYSTEM1_CD_VAL = @DATAAREAID\n  and SYSTEM1 = @SYSTEM1\n  and SYSTEM2 = @SYSTEM2\n;",
										"type": "Expression"
									},
									"partitionOption": "None"
								}
							}
						},
						{
							"name": "Update_GSC_IF_MNG2",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete_GOM_PO_LINE_STK1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BlobSource",
									"recursive": true
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBatchSize": 100000,
									"preCopyScript": {
										"value": "-- 変数宣言\nDECLARE @SYSDATE DATETIME;\nDECLARE @DATAAREAID VARCHAR(4);\nDECLARE @PROGRAMID VARCHAR(30);\nSET @SYSDATE = '@{variables('sysDate')}';\nSET @DATAAREAID = '@{variables('DATAAREAID')}';\nSET @PROGRAMID = '@{variables('programId')}';\n\nupdate GSC_IF_MNG set\n    GSC_IF_MNG.CPRT_DTTM = CONVERT(DateTime, @SYSDATE)\nwhere\n    GSC_IF_MNG.DATAAREAID = @DATAAREAID\nand\n    GSC_IF_MNG.FUNCTION_NAME = @PROGRAMID\n;",
										"type": "Expression"
									},
									"disableMetricsCollection": false
								},
								"enableStaging": false
							}
						}
					]
				}
			},
			{
				"name": "CASE_OTHER",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "CASE_NO_RECORD_FOUND",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(or(equals(variables('Exe_Status'), '0'), equals(variables('Exe_Status'), '1')))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Execute_CMN_FILE_BACKUP3",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "CMN_FILE_BACKUP",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"programId": {
										"value": "@variables('programId')",
										"type": "Expression"
									},
									"DATAAREAID": {
										"value": "@variables('DATAAREAID')",
										"type": "Expression"
									},
									"sysFromTo": {
										"value": "@variables('sysFromTo')",
										"type": "Expression"
									},
									"targetDir": {
										"value": "@variables('targetDir')",
										"type": "Expression"
									},
									"backupDate": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"Exe_Status": {
										"value": "@variables('Exe_Status')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Execute_CMN_FILE_BACKUP4",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Get_outPutFile_Size",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CMN_FILE_BACKUP",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"programId": {
							"value": "@variables('programId')",
							"type": "Expression"
						},
						"DATAAREAID": {
							"value": "@variables('DATAAREAID')",
							"type": "Expression"
						},
						"sysFromTo": {
							"value": "@variables('sysFromTo')",
							"type": "Expression"
						},
						"targetDir": {
							"value": "@variables('targetDir')",
							"type": "Expression"
						},
						"backupDate": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"Exe_Status": {
							"value": "@variables('Error_Code')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Execute_CMN_FILE_BACKUP5",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Check_File_Size",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CMN_FILE_BACKUP",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"programId": {
							"value": "@variables('programId')",
							"type": "Expression"
						},
						"DATAAREAID": {
							"value": "@variables('DATAAREAID')",
							"type": "Expression"
						},
						"sysFromTo": {
							"value": "@variables('sysFromTo')",
							"type": "Expression"
						},
						"targetDir": {
							"value": "@variables('targetDir')",
							"type": "Expression"
						},
						"backupDate": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"Exe_Status": {
							"value": "@variables('Error_Code')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Execute_CMN_FILE_BACKUP6",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "CASE_NORMAL",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CMN_FILE_BACKUP",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"programId": {
							"value": "@variables('programId')",
							"type": "Expression"
						},
						"DATAAREAID": {
							"value": "@variables('DATAAREAID')",
							"type": "Expression"
						},
						"sysFromTo": {
							"value": "@variables('sysFromTo')",
							"type": "Expression"
						},
						"targetDir": {
							"value": "@variables('targetDir')",
							"type": "Expression"
						},
						"backupDate": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"Exe_Status": {
							"value": "@variables('Error_Code')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Execute_CMN_FILE_BACKUP7",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "CASE_NO_RECORD_FOUND",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CMN_FILE_BACKUP",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"programId": {
							"value": "@variables('programId')",
							"type": "Expression"
						},
						"DATAAREAID": {
							"value": "@variables('DATAAREAID')",
							"type": "Expression"
						},
						"sysFromTo": {
							"value": "@variables('sysFromTo')",
							"type": "Expression"
						},
						"targetDir": {
							"value": "@variables('targetDir')",
							"type": "Expression"
						},
						"backupDate": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"Exe_Status": {
							"value": "@variables('Error_Code')",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"DATAAREAID": {
				"type": "string"
			}
		},
		"variables": {
			"programId": {
				"type": "String"
			},
			"DATAAREAID": {
				"type": "String"
			},
			"sysFromTo": {
				"type": "String"
			},
			"targetDir": {
				"type": "String"
			},
			"sysDate": {
				"type": "String"
			},
			"Exe_Status": {
				"type": "String"
			},
			"Error_Code": {
				"type": "String"
			},
			"Normal_Code": {
				"type": "String"
			}
		},
		"folder": {
			"name": "GSC/src/IDMS_GOM"
		},
		"annotations": [],
		"lastPublishTime": "2021-06-10T23:47:35Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}