{
	"name": "GUP_STORE_API_RESPONSE_SQLDB_V4",
	"properties": {
		"description": "Edits made to GUP Pipeline extract to only extract management GUP that is needed for Salesforce Misalignment",
		"activities": [
			{
				"name": "LP_PARTYID_LIST",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('Select distinct ',pipeline().parameters.columnName,' as partyId from ',pipeline().parameters.schemaName,'.',pipeline().parameters.tableName,' where batchNum=',pipeline().parameters.batchNum)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_CDO_SQLDB",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FE_GET_GUP_API_RESPONSE",
				"description": "call the CES API to get Independence details for all partyIds and write into Blob storage",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LP_PARTYID_LIST",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LP_PARTYID_LIST').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 50,
					"activities": [
						{
							"name": "COPY_GUP_API_RESPONSE_TO_BLOB",
							"description": "Copy GUP details to Blob storage. Bringing in only Management GUP Code 1882142",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 1,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"maxConcurrentConnections": {
											"value": "@pipeline().parameters.maxAPIConnections",
											"type": "Expression"
										},
										"requestMethod": "POST",
										"additionalHeaders": {
											"value": "Content-Type:application/json",
											"type": "Expression"
										},
										"requestBody": {
											"value": "@{concat(\n'{\n  \"identifierType\": \"partyId\",\n  \"identifierValue\": \"',item().partyId,'\",\n  \"hierarchyCode\": \"1882142\",\n  \"additionalPathDetails\": 1,\n  \"excludeIndependenceRestrictions\": false\n}'\n)}\n",
											"type": "Expression"
										},
										"requestTimeout": "00:01:00"
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_CES_GETGUP_SRC",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_GETGUP_TGT",
									"type": "DatasetReference",
									"parameters": {
										"fileName": {
											"value": "@item().partyId",
											"type": "Expression"
										},
										"folderName": {
											"value": "@pipeline().parameters.responseFolderName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SP_INSERT_ERROR_DETAILS",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "COPY_GUP_API_RESPONSE_TO_BLOB",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@pipeline().parameters.spInsErrorLog",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"errorMessage": {
										"value": {
											"value": "@activity('COPY_GUP_API_RESPONSE_TO_BLOB').output.errors[0].Message",
											"type": "Expression"
										},
										"type": "String"
									},
									"partyId": {
										"value": {
											"value": "@item().partyId",
											"type": "Expression"
										},
										"type": "String"
									},
									"runDate": {
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"schemaName": {
										"value": {
											"value": "@pipeline().parameters.errorLogSchemaName",
											"type": "Expression"
										},
										"type": "String"
									},
									"tableName": {
										"value": {
											"value": "@pipeline().parameters.errorLogTableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "USCDO_SQLDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"responseFolderName": {
				"type": "string"
			},
			"schemaName": {
				"type": "string"
			},
			"tableName": {
				"type": "string"
			},
			"batchNum": {
				"type": "string"
			},
			"errorLogSchemaName": {
				"type": "string"
			},
			"errorLogTableName": {
				"type": "string"
			},
			"spInsErrorLog": {
				"type": "string"
			},
			"columnName": {
				"type": "string"
			},
			"maxAPIConnections": {
				"type": "int"
			}
		},
		"folder": {
			"name": "CES_API"
		},
		"annotations": [],
		"lastPublishTime": "2021-08-16T11:02:50Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}